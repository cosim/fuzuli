#
# fuzuli : A general purpose interpreter
# Copyright (C) 2012 Mehmet Hakan Satman <mhsatman@yahoo.com>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.



(function fopen (params file mode)
		(return (javastatic "Core.FIO.fopen" file mode))
)

(function fclose (params file)
		(return (javastatic "Core.FIO.fclose" file))
)

(function feof (params file)
		(return (javastatic "Core.FIO.feof" file))
)

(function fwrite (params file obj)
		(return (javastatic "Core.FIO.fwrite" file obj))
)


(function fread (params file obj)
		(return (javastatic "Core.FIO.fread" file obj))
)


(function fflush (params file)
		(return (javastatic "Core.FIO.fflush" file))
)

(function chdir (params x)
		(return (javastatic "Core.FIO.chdir" x))
) 

(function getpwd (params)
		(return (javastatic "Core.FIO.getpwd"))
)

(function dir (params x)
		(return (javastatic "Core.FIO.dir" x))
)

(function unlink (params x)
		(return (javastatic "Core.FIO.unlink" x))
)

(function rename (params x y)
		(return (javastatic "Core.FIO.rename" x y))
)


(function tmpfile (params)
		(return (javastatic "Core.FIO.tmpfile"))
)


(function tmpnam (params)
		(return (javastatic "Core.FIO.tmpname"))
)


(function datetime (params)
		(return (javastatic "Core.FIO.datetime"))
)


(function asctime (params)
		(return (javastatic "Core.FIO.asctime"))
)

(function sleep (params x)
		(return (javastatic "Core.FIO.sleep" x))
)


(function getenv (params var)
		(return (javastatic "Core.FIO.getenv" var))
)

(function setenv (params var val changeflag)
		(return (javastatic "Core.FIO.setenv" var val changeflag))
)


(function rnd (params)
		(return (javastatic "Core.FIO.rnd"))
)

(function print_r (params alist)
		(return (javastatic "Core.FIO.print_r" alist))
)

(function popen (params process mode)
		(return (javastatic "Core.FIO.popen" process mode))
)

(function pclose (params process)
		(return (javastatic "Core.FIO.pclose" process))
)

(function exit (params code)
		(return (javastatic "Core.FIO.exit" code))
)

(function is_dir (params dir)
		(return (javastatic "Core.FIO.is_dir" dir))
)


(function time (params)
		(return (javastatic "Core.FIO.time"))
)

(function randomize (params seed)
		(return (javastatic "Core.FIO.randomize" seed))
)


(function puts (params text)
		(return (javastatic "Core.FIO.puts" text))
)

(function fputs (params file text)
		(return (javastatic "Core.FIO.fputs" file text))
)

(function fgetc (params file)
		(return (javastatic "Core.FIO.fgetc" file))
)

(function ftell (params file)
		(return (javastatic "Core.FIO.ftell" file))
)

(function readline (params)
		(return (javastatic "Core.FIO.readline"))
)
