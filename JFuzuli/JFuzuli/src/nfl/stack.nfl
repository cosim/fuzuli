#
# fuzuli : A general purpose interpreter
# Copyright (C) 2012-2014 Mehmet Hakan Satman <mhsatman@yahoo.com>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.


# Creates and returns new stack
(function stack_new (params)
    (return (internal "Core.FStack.stack_new"))
)

# Returns true if stack is empty
(function stack_empty (params stack)
    (return (internal "Core.FStack.stack_empty" stack))
)

# Clears the stack
(function stack_clear (params stack)
    (return (internal "Core.FStack.stack_clear" stack))
)

# Push obj to the stack
(function stack_push (params stack obj)
    (return (internal "Core.FStack.stack_push" stack obj))
)

# Pop an object from top of the stack
(function stack_pop (params stack)
    (return (internal "Core.FStack.stack_pop" stack))
)

# Peeks an object from top of the stack
# Returned object is not removed from the stack.
# This is the main difference between the method stack_pop
(function stack_peek (params stack)
    (return (internal "Core.FStack.stack_peek" stack))
)




